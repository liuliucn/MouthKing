name: NativeAOT Build

on:
  push:
    tags:
      - '*'

env:
  tag: $GITHUB_REF_NAME

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Git Repo Sync
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: wangchucheng/git-repo-sync@v0.1.0
      with:
        target-url: "https://gitee.com/tsdyy/mouth-king.git"
        target-username: ${{ secrets.GITLAB_USERNAME }}
        target-token: ${{ secrets.GITLAB_TOKEN }}
  build-on-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup NativeAOT pre-requisites
      run: sudo apt-get install clang zlib1g-dev libkrb5-dev --assume-yes
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: |
        sudo chmod +x ./publish.sh
        ./publish.sh ${{github.ref_name}}
    - uses: actions/upload-artifact@v4.6.0
      with:
        name: Linux-Artifact-${{github.ref_name}}
        path: |
          ./MouthKing.UI.Desktop/bin/Release/net9.0/linux-x64/publish/*.bin
          ./MouthKing.UI.Desktop/bin/Release/net9.0/linux-x64/publish/*.so
  build-on-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: ./publish.cmd ${{github.ref_name}}
    - uses: actions/upload-artifact@v4.6.0
      with:
        name: Windows-Artifact-${{github.ref_name}}
        path: |
          .\MouthKing.UI.Desktop\bin\Release\net9.0\win-x64\publish\*.exe
          .\MouthKing.UI.Desktop\bin\Release\net9.0\win-x64\publish\*.dll
  build-on-macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Publish
      run: |
        sudo chmod +x ./publish.command
        ./publish.command ${{github.ref_name}}
        mv ./installer_background.png ./MouthKing.UI.Desktop/bin/Release/net9.0/osx-x64/publish/
        cd ./MouthKing.UI.Desktop/bin/Release/net9.0/osx-x64/publish
        mkdir app_folder
        mv ./MouthKing.UI.Desktop.app ./app_folder/
        git clone https://github.com/create-dmg/create-dmg.git
        ./create-dmg/create-dmg \
          --volname "MouthKing.UI.Desktop Installer" \
          --background "installer_background.png" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "MouthKing.UI.Desktop.app" 200 190 \
          --hide-extension "MouthKing.UI.Desktop.app" \
          --app-drop-link 600 185 \
          "MouthKing.UI.Desktop-Installer.dmg" \
          "app_folder/"
        zip -r -9 macOS-Artifact.zip *.dmg
    - uses: actions/upload-artifact@v4.6.0
      with:
        name: macOS-Artifact-${{github.ref_name}}
        path: ./MouthKing.UI.Desktop/bin/Release/net9.0/osx-x64/publish/macOS-Artifact.zip

  download-artiface:
    runs-on: ubuntu-latest
    needs: [build-on-linux, build-on-windows, build-on-macos]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
    - name: create gitlab release
      id: create_release
      run: |
        curl -X POST --header 'Content-Type: application/json;charset=UTF-8' 'https://gitee.com/api/v5/repos/tsdyy/mouth-king/releases' 
            -d '{"access_token":"${{ secrets.GITLAB_API_TOKEN }}","tag_name":"${{github.ref_name}}","name":"${{github.ref_name}}","body":"${{github.ref_name}}","target_commitish":"master"}'
    - name: upload artifacts to gitlab
      run: |
        release_id=${{fromJson(steps.create_release.outputs).id}}
        echo $release_id
        url_windows=${{vars.GITLAB_URL}}/packages/generic/release/${{github.ref_name}}/Windows-Artifact.zip
        url_linux=${{vars.GITLAB_URL}}/packages/generic/release/${{github.ref_name}}/Linux-Artifact.zip
        url_macos=${{vars.GITLAB_URL}}/packages/generic/release/${{github.ref_name}}/macOS-Artifact.zip
        cd ./Windows-Artifact-${{github.ref_name}}/
        zip Windows-Artifact.zip * -r
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file Windows-Artifact.zip $url_windows
        cd ..
        cd ./Linux-Artifact-${{github.ref_name}}/
        zip Linux-Artifact.zip * -r
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file Linux-Artifact.zip $url_linux
        cd ..
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file macOS-Artifact-${{github.ref_name}}/macOS-Artifact.zip $url_macos
        cat appcast.xml
        cp appcast.xml appcast-windows.xml
        sed -i "s|url_placeholder|$url_windows|g" appcast-windows.xml
        sed -i "s|os_placeholder|windows|g" appcast-windows.xml
        sed -i "s|version_placeholder|${{github.ref_name}}|g" appcast-windows.xml
        cp appcast.xml appcast-linux.xml
        sed -i "s|url_placeholder|$url_linux|g" appcast-linux.xml
        sed -i "s|os_placeholder|linux|g" appcast-linux.xml
        sed -i "s|version_placeholder|${{github.ref_name}}|g" appcast-linux.xml
        cp appcast.xml appcast-macos.xml
        sed -i "s|url_placeholder|$url_macos|g" appcast-macos.xml
        sed -i "s|os_placeholder|macos|g" appcast-macos.xml
        sed -i "s|version_placeholder|${{github.ref_name}}|g" appcast-macos.xml
        cat appcast-windows.xml
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file appcast-windows.xml ${{vars.GITLAB_URL}}/packages/generic/release/xml/appcast-windows.xml
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file appcast-linux.xml ${{vars.GITLAB_URL}}/packages/generic/release/xml/appcast-linux.xml
        curl -sS --header "Private-Token: ${{ secrets.GITLAB_TOKEN }}" --upload-file appcast-macos.xml ${{vars.GITLAB_URL}}/packages/generic/release/xml/appcast-macos.xml
